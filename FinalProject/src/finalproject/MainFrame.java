/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package finalproject;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Timestamp;
import java.util.Random;
import javax.swing.JOptionPane;

/**
 *
 * @author Fess
 */
public class MainFrame extends javax.swing.JFrame {
    Connection conn = null;
    ResultSet rs = null;
    PreparedStatement pst = null; //переменные, необходимые для работы с подключением к базе данных

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {//конструктор
        initComponents();
        conn = DatabaseConnect.ConnectToDatabase();//создания подключения к базе данных
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Выберите пункт:");

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton1.setText("Заехать через КПП");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton2.setText("Сгенерировать новую машину");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton3.setText("Показать машины на стоянке");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton4.setText("Выехать через КПП");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton5.setText("Показать состояние стоянки");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
         try {
            String sql="INSERT INTO \"public\".\"Cars\" (car_number) VALUES (?)"; //создатеся стороковая переменная, в которой содержится строка запроса в базу данных
            String Number=generateNumber();
            pst = conn.prepareStatement(sql);
            pst.setString(1, Number);
            pst.execute();
            JOptionPane.showMessageDialog(null, "Машина с номером "+Number+" добавлена!");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String resultNumber=null;
        //while (/*resultNumber==null||*/resultNumber.equals(""))
            resultNumber = JOptionPane.showInputDialog(null,"Введите номер машины: ");//создатеся экземпляр окошка, в котором выводится соответствующее сообщение; результат заноситься в переменную вначале строки
        //System.out.println("RESULT = "+result);
        if(CheckRegistration(resultNumber))
        {
            if(CheckStatus(resultNumber))
            {
                JOptionPane.showMessageDialog(null, "Машина с номером "+resultNumber+" уже на стоянке!");
            try {
            String sql="INSERT INTO \"public\".\"Events\" (event_type,time) VALUES (?, ?)";
            pst = conn.prepareStatement(sql);
            pst.setString(1, "Попытка заезда машины которая уже находится на стоянке, с номером "+resultNumber);
            pst.setTimestamp(2, new Timestamp(System.currentTimeMillis()));
            pst.execute();                  
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
            }
            else
            {
        try {
            int carID=getCarIdFromNumber(resultNumber);
            int FPlace=getFirstFreePlace();
            String sql="INSERT INTO \"public\".\"Events\" (event_type,time) VALUES (?, ?);"+
                    "UPDATE \"public\".\"Parking\" SET car_id=? WHERE place_id=?";
            pst = conn.prepareStatement(sql);
            pst.setString(1, "Заезд машины с номером "+resultNumber);
            pst.setTimestamp(2, new Timestamp(System.currentTimeMillis()));
            pst.setInt(3, carID);
            pst.setInt(4, FPlace);
            pst.execute();
            JOptionPane.showMessageDialog(null, "Машина с номером "+resultNumber+" проехала!");            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Машина с номером "+resultNumber+" не зарегистрирована!");
            try {
            String sql="INSERT INTO \"public\".\"Events\" (event_type,time) VALUES (?, ?)";
            pst = conn.prepareStatement(sql);
            pst.setString(1, "Попытка заезда незарегистрированной машины с номером "+resultNumber);
            pst.setTimestamp(2, new Timestamp(System.currentTimeMillis()));
            pst.execute();                  
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        new ParkingFrame().setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        String resultNumber=null;
        //while (/*resultNumber==null||*/resultNumber.equals(""))
            resultNumber = JOptionPane.showInputDialog(null,"Введите номер машины: ");
        //System.out.println("RESULT = "+result);
        if(CheckRegistration(resultNumber))
        {
        try {
            if(!CheckStatus(resultNumber))
            {
                JOptionPane.showMessageDialog(null, "Машины с номером "+resultNumber+" нет на стоянке!");
            try {
            String sql="INSERT INTO \"public\".\"Events\" (event_type,time) VALUES (?, ?)";
            pst = conn.prepareStatement(sql);
            pst.setString(1, "Попытка выезда машины которой нет на стоянке, с номером "+resultNumber);
            pst.setTimestamp(2, new Timestamp(System.currentTimeMillis()));
            pst.execute();                  
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
            }
            else
            {
            int carID=getCarIdFromNumber(resultNumber);
            String sql="INSERT INTO \"public\".\"Events\" (event_type,time) VALUES (?, ?);"+
                    "UPDATE \"public\".\"Parking\" SET car_id=NULL WHERE car_id=?";
            pst = conn.prepareStatement(sql);
            pst.setString(1, "Выезд машины "+resultNumber);
            pst.setTimestamp(2, new Timestamp(System.currentTimeMillis()));
            pst.setInt(3, carID);
            pst.execute();
            JOptionPane.showMessageDialog(null, "Машина с номером "+resultNumber+" выехала!");            
        }
        }catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Машина с номером "+resultNumber+" не зарегистрирована!");
            try {
            String sql="INSERT INTO \"public\".\"Events\" (event_type,time) VALUES (?, ?)";
            pst = conn.prepareStatement(sql);
            pst.setString(1, "Попытка выезда незарегистрированной машины с номером "+resultNumber);
            pst.setTimestamp(2, new Timestamp(System.currentTimeMillis()));
            pst.execute();                  
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        new ParkingStatusFrame().setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    
      public static String generateNumber() {//функция генерации случайного номера машины
        Random rand = new Random();

        StringBuilder sb = new StringBuilder();
        int from = Integer.valueOf('А');
	int to = Integer.valueOf('Я');
        int value=0;
        System.out.println((char) value);
        for (int i = 0; i < 2; i++) {
            value = from + rand.nextInt(to - from + 1);
            sb.append((char) value);
        }
        for (int i = 0; i < 4; i++) {
            sb.append(rand.nextInt(9));
        }
        for (int i = 0; i < 2; i++) {
            value = from + rand.nextInt(to - from + 1);
            sb.append((char)value);
        }

        return sb.toString();
    }
     
    public boolean CheckRegistration(String CarNumber)
    {
      String sql="SELECT * FROM \"public\".\"Cars\" WHERE car_number=?";
        try
        {
            pst=conn.prepareStatement(sql);
            pst.setString(1, CarNumber);
            rs = pst.executeQuery();
                if(rs.next())                
                  return true;
                else
                  return false;
                
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
 return false;
 }  
 public boolean CheckStatus(String CarNumber)
    {
        int carID=getCarIdFromNumber(CarNumber);
        String sql="SELECT \"public\".\"Parking\".\"place_id\" FROM \"public\".\"Parking\" WHERE car_id=?";
        try
        {
            pst=conn.prepareStatement(sql);
            pst.setInt(1, carID);
            rs = pst.executeQuery();
                if(rs.next())                
                  return true;
                else
                  return false;
                
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
 return false;
 }
 
  public int getCarIdFromNumber(String CarNumber)
    {
      String sql="SELECT c.\"car_id\" FROM \"public\".\"Cars\" c WHERE c.\"car_number\"=?";
        try
        {
            pst=conn.prepareStatement(sql);
            pst.setString(1, CarNumber);
            rs = pst.executeQuery();
                while(rs.next())                
                  return rs.getInt("car_id");                
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
        return 0;
 }
public int getFirstFreePlace()
    {
      String sql="SELECT \"public\".\"Parking\".\"place_id\" FROM \"public\".\"Parking\" WHERE car_id is NULL ORDER BY place_id ASC LIMIT 1";
        try
        {
            pst=conn.prepareStatement(sql);
            rs = pst.executeQuery();
                while(rs.next())                
                  return rs.getInt("place_id");                
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
        return 0;
 }  
      /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
